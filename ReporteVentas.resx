<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LliwgKVIYcOaFsDUrKysvn379urVi+H4/X4GeCsOmxeNz1eZC9b0unXrOnbs+K1vfeuHP/zhnTZ++tOf
        ujc/+tGPvvvd737/+9//y1/+Qnjmzp174cKF2qJ4Q4gZVICm99xzzx133PHcc88dOnRINKlhIUHyIZPP
        5/vOd75D9+h5mzZt8vLy8Nkwh1LrzJkz8O9Xv/oVPhm71+vdtGkT1HQN3JtwONynT59vf/vbv//974cN
        G8ZqdB/VFzIPRKFt27Y//vGPv/e97zHbsJYBikFLRBL5un79+v/+978/+MEP0tLSZsyYsWPHjv379yO6
        n3/+Ofdr1qx57733YAaBgRx33XUXq5+plCShLhESG8Rv1qxZ//jHP+AWnDhy5EjD9lDxVlJSMnTo0N/8
        5jd//OMf77vvPrgFyQYNGnT06FHXpl6QKqg+ThgpvAE/+clPHn300ezs7ET5lCt87d+/P2P585//PHz4
        cPmyZAPaFRw+fHjAgAE09+tf//rf//73b3/725///OdvvPEGy6DBK7B5kax8QPhKVFCULl26bNmypebs
        sDGR0i1evLhr166I7i9/+UuEB07XkXDiEL6y1f79739nYcBXItSAMEiVUCi0aNGi1q1bo0O4Wrhwocfj
        ga+/+93vZs+eLYkslvXyL8boK3zFD52EMYDxsoxJPNx0VizhK7sEZn/6058azFfxRggmT5589913s/bI
        vhjaY489hsp26NCBoUmiX1/PzY7k8hV9RTuZptzcXCLB7MgP9yXwYsnN5s2be/ToQZCg7Ouvv/7VV19J
        uRjUBjFI5CtRga84F4O6A1fgyy+/ZGlBJiK6bNkyOswm8M9//pPUpXv37mR+YilV6gixF30VvrImYSRS
        B2Xvv//+OXPmlJaWYiPdvnW+ijHbFJkA8w9Bu3XrhgpwjHv33XeZKASeBCw/P59YSJUWhKTzFX3t3Lnz
        xo0bKXGeJYDJJU5M7rx58wgh+y/J1tatW+WR2NQGMbh1voofJJDTIWrEmnn77bcRfgpJqV977TWoQ4wh
        3Llz5+obY3Hu5gMo99ixYw8ePDh69GhybnZqso6pU6dychd7+MpRrwF8xUbA8OkkLXKoZT5ZEh988AGT
        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
</value>
  </data>
</root>